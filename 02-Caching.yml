jobs: 
- job: Build
  pool:
    vmImage: ubuntu-24.04
  variables:
  - name: DOTNET_NOLOGO
    value: true
    readonly: true
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE 
    value: true
    readonly: true
    #Override to create env variable to have control where the global packages are stored for caching: https://learn.microsoft.com/en-us/nuget/consume-packages/managing-the-global-packages-and-cache-folders
  - name: NUGET_PACKAGES
    value: '$(Pipeline.Workspace)/.nuget/packages/'
    readonly: true
  - name: DOTNET_VERSION 
    value: 9
    readonly: true
        
  steps:

  - script: |
      # URL to the .NET release metadata
      $releasesUrl = "https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json"
      
      # Fetch and parse the JSON data
      $releasesData = Invoke-RestMethod -Uri $releasesUrl -UseBasicParsing
      
      # Filter for .NET 9 releases and get the latest version
      $dotNet9 = $releasesData.releases | Where-Object { $_."channel-version" -like "9*" }
      $latestNet9 = $dotNet9 | Select-Object -ExpandProperty "latest-supported-release"
      
      # Output the latest version of .NET 9

Write-Output "Latest .NET 9 version: $latestNet9"
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '${{variables.DOTNET_VERSION}}.x'
      includePreviewVersions: false

  - task: Cache@2
    displayName: 'Restore cache for Dotnet'
    inputs:
      key: 'nuget | "$(Agent.OS)"
      path: '$(Agent.ToolsDirectory)/dotnet'
  
  - task: Cache@2
    displayName: 'Restore cache for NuGet'
    inputs:
      key: 'nuget | "$(Agent.OS)" | **/packages.lock.json,!**/bin/**,!**/obj/**'
      path: '$(NUGET_PACKAGES)'

  - task: DotNetCoreCLI@2
    displayName: Dotnet restore '**/*.csproj'
    inputs:
      command: 'restore'
      projects: '**/*.csproj'
      restoreArguments: '--locked-mode'
      feedsToUse: 'select'

  - task: DotNetCoreCLI@2
    displayName: Dotnet build
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--no-restore --configuration Release'
